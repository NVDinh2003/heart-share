spring.application.name=backend
server.port=8000
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASS}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=false
spring.jpa.hibernate.ddl-auto=create
#spring.jpa.ddl-auto=update
#====
#10 requests trong 1P
nvd.redis.ttl=60
nvd.redis.requests=5
# redis
#spring.data.redis.host=localhost
#spring.data.redis.port=6379
# Redis Configuration
#nvd.redis.uri=redis://red-ck83erfq54js73a93b90:ZleRTUCdR8fqjegljaMAcp551jsH1vWw@singapore-redis.render.com:6379
#nvd.redis.uri=redis://10.50.0.3:49130
nvd.redis.uri=redis://localhost:6379
# ===
#
spring.sql.init.mode=always
#
spring.sql.init.schema-locations=classpath:/vietnamese-provinces-database.sql
spring.sql.init.data-locations=classpath:/data.sql
#
spring.jpa.defer-datasource-initialization=true
# ==============
rsa.private-key=classpath:certs/private.pem
rsa.public-key=classpath:certs/public.pem
# ==============
spring.servlet.multipart.max-file-size=5MB
spring.servlet.multipart.max-request-size=20MB
# ======== Cloudinary
cloudinary.cloud_name=${CLOUDINARY_CLOUD_NAME}
cloudinary.api_key=${CLOUDINARY_API_KEY}
cloudinary.api_secret=${CLOUDINARY_API_SECRET}
#============== Google OAuth2
outbound.identity.client-id=${GOOGLE_CLIENT_ID}
outbound.identity.client-secret=${GOOGLE_CLIENT_SECRET}
outbound.identity.redirect-uri=http://localhost:3000/authenticate
#==============
logging.level.org.springframework.security=DEBUG